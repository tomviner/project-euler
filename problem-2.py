"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

from collections import deque

def fib():
    """
    Each term is the sum of the last two
    >>> import itertools
    >>> list(itertools.islice(fib(), 10))
    [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
    """
    d = deque([1], maxlen=2)
    while True:
        last_two = sum(d)
        yield last_two
        d.append(last_two)

def even_fibs(limit):
    """
    >>> even_fibs(89)  # 2 + 8 + 34
    44
    """
    total = 0
    for n in fib():
        if n > limit:
            return total
        if not n % 2:
            total += n

if __name__ == '__main__':
    print(even_fibs(4000000))
